############################################################################################################
#
#  This file will install and setup NginX for a django project called myproject (can be changed in the vars section)
#  And for the given IP addresses and domain names.
#
#####################################################################################################################

---
- hosts: web
  become: yes
  vars:
    sys_packages: [ "nginx" ]

  tasks:
    - name: Update apt
      apt: update_cache=yes

    - name: Install NginX
      apt: name={{ sys_packages }} state=present

# The block parameter with "|" allows to add the text in exactly the same format as desired with newlines.
##### Please note that if ssl has already been setup running this file will change the nginx config that was added by certbot.
    - name: Create and populate /etc/nginx/sites-available/{{project_name}} file
      blockinfile:
        path: /etc/nginx/sites-available/{{project_name}}
        create: yes
        block: |
                server {
                    listen 80;
                    server_name {{server_IP}} {{domain_name}} www.{{domain_name}};

                    location = /favicon.ico { access_log off; log_not_found off; }
                    location /static/ {
                        root /home/{{create_user}}/{{project_name}};
                    }

                    location / {
                        include proxy_params;
                        proxy_pass http://unix:/run/gunicorn.sock;
                    }
                }
        notify:
          - Restart NginX and get status

    - name: Create a symlink to sites-enabled
      file:
        src: /etc/nginx/sites-available/{{project_name}}
        dest: /etc/nginx/sites-enabled/{{project_name}}
        state: link


    - name: Delete 8000 development server ufw rule
      command: ufw delete allow 8000


    - name: Allow full access to port 80
      command: ufw allow 'Nginx Full'


  handlers:

    - name: Reload gunicorn and get status
      command: "{{ item }}"
      become_user: root
      with_items:
        - sudo systemctl daemon-reload
        - sudo systemctl restart gunicorn.service
        - sudo systemctl status gunicorn

    - name: Restart NginX and get status
      command: "{{ item }}"
      become_user: root
      with_items:
        - sudo nginx -t
        - sudo systemctl restart nginx
        - sudo systemctl status nginx

    - name: Activate fail2ban new config
      command: "{{ item }}"
      become_user: root
      with_items:
        - sudo service fail2ban restart
        - sudo systemctl start fail2ban.service
        - sudo fail2ban-client status


    - name: Get postgresql status
      command: sudo systemctl status postgresql
      become_user: root


    - name: Make sure .env file has the correct permissions
      shell: chmod 0775 /home/{{create_user}}/{{project_name}}/.env
      become_user: root
